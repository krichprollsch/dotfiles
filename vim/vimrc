" vim conf - Pierre Tachoire
" inspired by Vincent Jousse

call pathogen#infect()	" enable pathogen
set nocompatible	" remove vi compat
set title		" update term title
"set number		" add line number
set ruler		" show cursor pos
"set wrap		
set scrolloff=3		" lines around scroll
set ignorecase		" search ignore case
set smartcase		" search case sensitive if caps char used
set incsearch		" highlight search results while typing
set hlsearch		" highlight search results
set visualbell		" remove beeps
set noerrorbells	" remove beeps
set hidden		" hide file while opening other files
set nobackup
set nowritebackup
set noswapfile

" backspace as usual
set backspace=indent,eol,start	

syntax enable

filetype on
filetype plugin on
filetype indent on

" enable solarized
set background=light
colorscheme base16-tomorrow

highlight ColorColumn ctermfg=DarkGray
let &colorcolumn=join(range(81,999),",")
"let &colorcolumn="80,".join(range(120,999),",")

" Desactiver les touches directionnelles
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>
imap <up> <nop>
imap <down> <nop>
imap <left> <nop>
imap <right> <nop>

" ;; as esc
map ;; <esc>
imap ;; <esc>

" make plugins smoother
set lazyredraw

let mapleader = ","

" disable parent hightlight
let g:loaded_matchparen= 1

" always replace all occurences of a line
set gdefault

" Tabs and indentation
set smartindent
set tabstop=4
set shiftwidth=4
set expandtab

" ctrlp
let g:ctrlp_map                 = '<leader>t'
let g:ctrlp_max_files           = 100000
let g:ctrlp_clear_cache_on_exit = 0
let g:ctrlp_custom_ignore = {
    \ 'dir':  '\.git$\|\.hg$\|\.svn$\|cache\|node_modules|\.idea|cache',
    \ 'file': '\.exe$\|\.so$\|\.dll|tags|\.ctrlp$' }
let g:ctrlp_root_markers = ['.ctrlp']

" Syntastic
let g:syntastic_auto_loc_list = 1                       " auto open/close the errors list
let g:syntastic_quiet_messages = {'level': 'warnings'}  " don't want warnings to be displayed
let g:syntastic_php_checkers = ['php', 'phpcs']
let g:syntastic_php_phpcs_args="--report=csv --standard=PSR2"

" Ctags
set tags=./tags;/,~/.vimtags,tags,vendor.tags

" F5 removes endline spaces
:nnoremap <silent> <F5> :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar>:nohl<CR>

" airline
set laststatus=2
let g:airline_powerline_fonts = 1

" neocomplete
let g:acp_enableAtStartup = 0
let g:neocomplete#enable_at_startup = 1
let g:neocomplete#enable_smart_case = 1
let g:neocomplete#enable_auto_delimiter = 1
let g:neocomplete#max_list = 15
let g:neocomplete#force_overwrite_completefunc = 1
let g:neocomplete#auto_completion_start_length = 3
let g:neocomplete#sources#syntax#min_keyword_length = 3

let g:neocomplete#sources#dictionary#dictionaries = {
            \ 'default' : '',
            \ 'vimshell' : $HOME.'/.vimshell_hist',
            \ 'scheme' : $HOME.'/.gosh_completions'
            \ }

if !exists('g:neocomplete#keyword_patterns')
    let g:neocomplete#keyword_patterns = {}
endif
let g:neocomplete#keyword_patterns['default'] = '\h\w*'

inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<TAB>"

function! CleverTab()
    if pumvisible()
        return "\<C-n>"
    endif
    let substr = strpart(getline('.'), 0, col('.') - 1)
    let substr = matchstr(substr, '[^ \t]*$')
    if strlen(substr) == 0
        " nothing to match on empty string
        return "\<Tab>"
    else
        return neocomplete#start_manual_complete()
    endif
endfunction

imap <expr> <Tab> CleverTab()

autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
autocmd FileType html,markdown setlocal omnifunc=htmlcomplete#CompleteTags
autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
autocmd FileType php setlocal omnifunc=phpcomplete#CompletePHP

" Enable heavy omni completion.
if !exists('g:neocomplete#sources#omni#input_patterns')
    let g:neocomplete#sources#omni#input_patterns = {}
endif
let g:neocomplete#sources#omni#input_patterns.php = '[^. \t]->\h\w*\|\h\w*::'

" tagbar
nmap <F8> :TagbarToggle<CR>
